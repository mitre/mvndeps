% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_classpath.R
\name{write_pom}
\alias{write_pom}
\title{Write a Super Simple POM}
\usage{
write_pom(
  deps,
  path = tempdir(),
  artifact_id = "temp-proj",
  group_id = "temp-group",
  version = "0.0.1-SNAPSHOT"
)
}
\arguments{
\item{path}{Character. The path to write the pom.xml file}

\item{artifact_id}{Character. The name of your project}

\item{group_id}{Character. Typically the name of your organization}

\item{version}{Character. Some version number.}
}
\description{
\code{mvn dependency:build-classpath} only works with a pom.xml - so this function writes a pom to make maven happy.
This can also be handy if you want to use \code{\link{build_classpath_from_pom}} with a package and you need to
 actually compose a pom.xml to do that.
}
\details{
Note that \code{artifact_id}, \code{group_id}, and \code{version} are required to write a pom file, but have no
 practical meaning here since this pom should never be deployed anywhere (for other things to rely on it).
 It is really just a mechanism for specifying dependencies.

 If you need more complicated pom settings (e.g., an excludes section) you need to write that manually, or use
 some other tool to create your pom.xml. This function is not doing anything smart. It just tries to write
 a valid pom to specify dependencies for maven to resolve.
}
