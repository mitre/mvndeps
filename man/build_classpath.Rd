% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_classpath.R
\name{augment_classpath}
\alias{augment_classpath}
\alias{build_classpath}
\title{Get a java classpath from dependency list}
\usage{
augment_classpath(artifacts, pom_path, pkg_name, pom_name = "pom.xml",
  verbose = FALSE, ...)

build_classpath(artifacts, pom_path, pkg_name, pom_name = "pom.xml",
  dep_plugin_version, include_scope = "runtime", local_repo,
  absolute_paths = TRUE, overwrite_if_newer = TRUE,
  overwrite_releases = FALSE, overwrite_snapshots = FALSE, mvn_args,
  verbose = FALSE)
}
\arguments{
\item{artifacts}{Character vector. Should be of the form 'groupId:artifactId:version[:packaging[:classifier]]'
where the packaging and classifier inputs are optional.}

\item{pom_path}{Character. Path to a pom.xml to build a classpath from.}

\item{pkg_name}{Character. Name of a package that has a pom.xml in the inst/java directory.}

\item{pom_name}{Character. Name of the pom file (in case of nonstandard names, like mvndeps.xml).
Only used if \code{pkg_name} is provided.}

\item{verbose}{Logical. Dump maven output to console.}

\item{...}{Arguments passed to \code{\link[rJava]{.jinit}}}

\item{dep_plugin_version}{Character. The version of the maven dependency plugin. See https://github.com/apache/maven-dependency-plugin/releases
for release versions.}

\item{local_repo}{Character. Path to local maven repository. If missing then the default location
or the location specified in a user's settings.xml will be used.}

\item{absolute_paths}{Logical. Output absolute filename for resolved artifacts.}

\item{overwrite_if_newer}{Logical. If \code{TRUE} overwrite artifacts that don't exist or are older than the source.}

\item{overwrite_releases}{Logical. If \code{TRUE} overwrite release artifacts.}

\item{overwrite_snapshots}{Logical. If \code{TRUE} overwrite snapshot artifacts.}

\item{mvn_args}{Character vector. Additional arguments to pass to the Maven dependency:build-classpath
plugin. Should be of the form \code{c("-Dparam1=value1", -Dparam2=value2")}.}

\item{includeScope}{Character. Scope to include. An Empty string indicates all scopes. Possible
scopes are \code{"runtime", "compile", "test", "provided", "system"}}
}
\description{
Given one or more dependencies retrieve a classpath that can be used to set up
rJava correctly.
}
\section{On Specifying Dependencies}{


Resolve the java classpath from either a vector of dependencies or a pom.xml. Maven will
attempt to download any dependencies (direct or transitive) that are not found in the
local maven repository.

The \code{deps}, \code{pom_path}, and \code{pkgname} inputs are mutually exclusive.
Use exactly one or an error will result.

\code{build_classpath} will return a character vector of jars to be added to the classpath
but will not actually change the classpath. \code{augment_classpath} will update the java
classpath (and initilize the JVM if necessary).

There are several parameters available for the Maven dependency:build-classpath
plugin. See https://maven.apache.org/plugins/maven-dependency-plugin/build-classpath-mojo.html
for details. Only the parameters likely to be of most use in the context of resolving
a java classpath for use from R are directly exposed. Any custom parameters beyond these
can be entered via the \code{mvn_args} input.
}

