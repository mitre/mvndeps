% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependency_get.R
\name{get_dependencies}
\alias{get_dependencies}
\title{Force Download a Java Dependency}
\usage{
get_dependencies(artifacts, transitive = TRUE, remote_repos = NULL,
  dep_plugin_version = NULL, verbose = FALSE)
}
\arguments{
\item{artifacts}{Character vector. Should be of the form 'groupId:artifactId:version[:packaging[:classifier]]'
where the packaging and classifier inputs are optional.}

\item{transitive}{Logical. Should transitive dependencies (i.e., dependencies of the dependency) be retrieved?}

\item{remote_repos}{Character vector. A vector of repositories to look in for the artifact. These should be
of the form 'id::[layout]::url', or simply using the URL is ok. For example, for maven central you may use
'central::default::http://repo1.maven.apache.org/maven2'. If missing the repositories configured in the user's
\code{settings.xml} will be used.}

\item{dep_plugin_version}{Character. The version of the maven dependency plugin. See https://github.com/apache/maven-dependency-plugin/releases
for release versions.}

\item{verbose}{Logical. Dump maven output to console.}
}
\value{
an integer vector of status codes, one for each artifact listed. Status code 0 indicates that the artifact
  was successfully retrieved.
}
\description{
This function will ensure that the specified java dependency is available in the user's local maven
repository. It will not resolve the classpath in the sense of returning a list of jars to be added
to the java classpath. For that use case see \code{\link{build_classpath}}.
}
\details{
Under the hood this is using the maven dependency:get plugin. See
https://maven.apache.org/plugins/maven-dependency-plugin/get-mojo.html for details. One consequence
of this is that each artifact in the input must be downloaded separately. However common transitive
dependencies will not be redownloaded as maven will detect that a given transitive dependency is already
available when resolving the second main dependency.
}
