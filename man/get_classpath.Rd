% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvn_cp.R
\name{get_classpath}
\alias{get_classpath}
\title{Get a java classpath from dependency list}
\usage{
get_classpath(dep, group, version, mvn = find_mvn(), java_home,
  transitive = TRUE, quiet = FALSE)
}
\arguments{
\item{dep}{Character. The dependency name. This could be the entire name (e.g.,
group:dependency:version) in which case the other inputs may be omitted. Otherwise
it can be just the dependency name (i.e., the part in the middle of the above example).}

\item{group}{Character. The maven artifact group name.}

\item{version}{Character. The desired version of the dependency.}

\item{mvn}{Character. The path the the maven installation.}

\item{java_home}{Character. Path to java. If not provided the standard install paths
(platform dependent) will be checked.}

\item{transitive}{Logical. If \code{TRUE}, download transitively, retrieving the specified artifact and all of its dependencies.}

\item{quiet}{Logical. If \code{FALSE} status messages and some logs/warnings will be printed to the console.}
}
\description{
Given one or more dependencies retrieve a classpath that can be used to set up
rJava correctly.
}
\section{On Specifying Dependencies}{


The \code{group} and \code{version} arguments are provided mostly for compatibility with
\code{\link{find_dependency_path}} and friends. When more than one direct dependency needs
to be specified it is probably less confusing (unless the values are coming from a \code{data.frame})
to provide a vector of completely specified dependencies in the \code{dep} argument.
}

